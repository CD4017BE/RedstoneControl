buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:${snapshot}-SNAPSHOT"
    }
}

plugins {
	id("maven-publish")
}

apply plugin: 'net.minecraftforge.gradle.forge'

/*
// for people who want stable - not yet functional for MC 1.8.8 - we require the forgegradle 2.1 snapshot
plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}
*/

version = "${mc_version}-${mod_version}"
group= "com.cd4017be.circuits" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "RedstoneControl"

sourceCompatibility = "${java_version}"
targetCompatibility = "${java_version}"

sourceSets {
    main {
        java { srcDirs = ["$projectDir/src/java"] }
        resources { srcDirs = ["$projectDir/src/resources"] }
    }
}

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "${mc_mapping}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

tasks.build.dependsOn('sourceJar', 'deobfJar')
tasks.publish.dependsOn('build')

processResources {
    from (sourceSets.main.resources.srcDirs)
}

artifacts {
	archives deobfJar 
	archives sourceJar
	archives jar
}

repositories {
	maven {
		// location of the maven that hosts JEI files
		name = "Progwml6 maven"
		url = "http://dvs1.progwml6.com/files/maven"
	}
	maven {
		// location of a maven mirror for JEI files, as a fallback
		name = "ModMaven"
		url = "modmaven.k-4u.nl"
	}
	maven {
		url = "http://maven.cil.li/"
	}
	maven {
		url = "http://maven.ic2.player.to/"
	}
	maven {
		url = "https://maven.pkg.github.com/cd4017be/cd4017be_lib"
		credentials {
			username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
			password = project.findProperty("gpr.key") ?: System.getenv("PASSWORD")
		}
	}
}

dependencies {
	// JEI
	deobfProvided "mezz.jei:jei_${mc_version}:${jei_version}:api"
	runtime "mezz.jei:jei_${mc_version}:${jei_version}"
	// OC
	compile "li.cil.oc:OpenComputers:${oc_version}:api"
	//TIS-3D
	compile "li.cil.tis3d:TIS-3D:${tis3d_version}"
	// IC2
	compile "net.industrial-craft:industrialcraft-2:${ic2_version}:api"
	// CD4017BE_lib
	compileOnly "com.cd4017be.lib:CD4017BE_lib:${mc_version}-${lib_version}:deobf"
	runtime "com.cd4017be.lib:CD4017BE_lib:${mc_version}-${lib_version}"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/cd4017be/redstonecontrol")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("PASSWORD")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            artifact jar
            artifact deobfJar
            artifact sourceJar
        }
    }
}

